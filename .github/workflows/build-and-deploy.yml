name: Build and Push Docker Image for Person Detection Service

on:
  push:
    branches:
      - main

permissions:
  packages: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: echo "${GITHUB_TOKEN}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      run: docker build -t ghcr.io/deepview-analytics/person_detection_service_yolov8s:latest .

    - name: Push Docker image to GitHub Packages
      run: docker push ghcr.io/deepview-analytics/person_detection_service_yolov8s:latest

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y kubectl

      - name: Set Kubernetes environment variables
        env:
          KUBE_SERVER: "https://d4fe-41-226-7-130.ngrok-free.app"  
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        run: |
          export KUBERNETES_SERVICE_HOST=$(echo $KUBE_SERVER | awk -F[/:] '{print $4}')
          export KUBERNETES_SERVICE_PORT=$(echo $KUBE_SERVER | awk -F[/:] '{print $5}')
          export KUBE_TOKEN=$KUBE_TOKEN

      - name: Test Kubernetes Connection
        env:
          KUBERNETES_SERVICE_HOST: ${{ steps.set-kubernetes-env.outputs.KUBERNETES_SERVICE_HOST }}
          KUBERNETES_SERVICE_PORT: ${{ steps.set-kubernetes-env.outputs.KUBERNETES_SERVICE_PORT }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        run: |
          kubectl --server=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT --token=$KUBE_TOKEN get nodes

      - name: Apply Kubernetes Configuration
        env:
          KUBERNETES_SERVICE_HOST: ${{ steps.set-kubernetes-env.outputs.KUBERNETES_SERVICE_HOST }}
          KUBERNETES_SERVICE_PORT: ${{ steps.set-kubernetes-env.outputs.KUBERNETES_SERVICE_PORT }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        run: |
          kubectl --server=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT --token=$KUBE_TOKEN apply -f ./kubernetes/deployment.yaml --validate=false
          kubectl --server=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT --token=$KUBE_TOKEN apply -f ./kubernetes/service.yaml --validate=false
          kubectl --server=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT --token=$KUBE_TOKEN apply -f ./kubernetes/hpa.yaml --validate=false
          kubectl --server=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT --token=$KUBE_TOKEN apply -f ./kubernetes/network-policy.yaml --validate=false
