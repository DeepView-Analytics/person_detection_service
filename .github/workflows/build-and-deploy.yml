name: Build and Push Docker Image for Person Detection Service

on:
  push:
    branches:
      - main

permissions:
  packages: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: echo "${GITHUB_TOKEN}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      run: docker build -t ghcr.io/deepview-analytics/person_detection_service_yolov8s:latest .

    - name: Push Docker image to GitHub Packages
      run: docker push ghcr.io/deepview-analytics/person_detection_service_yolov8s:latest
      
  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: dev
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Write KUBECONFIG to file
        run: echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml

      - name: Verify KUBECONFIG file
        run: cat kubeconfig.yaml

      - name: Set KUBECONFIG environment variable
        run: echo "KUBECONFIG=$(pwd)/kubeconfig.yaml" >> $GITHUB_ENV

      - name: Set Kubernetes Context
        run: kubectl config use-context docker-desktop --kubeconfig=$(pwd)/kubeconfig.yaml

      - name: Check DNS Resolution
        run: nslookup host.docker.internal

      - name: Test Cluster Connectivity
        run: curl -k https://host.docker.internal:6443

      - name: Deploy to Kubernetes
        run: |
          kubectl apply --validate=false -f kubernetes/deployment.yaml --kubeconfig=$(pwd)/kubeconfig.yaml
          kubectl apply --validate=false -f kubernetes/service.yaml --kubeconfig=$(pwd)/kubeconfig.yaml
          kubectl apply --validate=false -f kubernetes/hpa.yaml --kubeconfig=$(pwd)/kubeconfig.yaml
          kubectl apply --validate=false -f kubernetes/network-policy.yaml --kubeconfig=$(pwd)/kubeconfig.yaml
