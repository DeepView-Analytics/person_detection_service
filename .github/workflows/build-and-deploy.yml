name: Build and Push Docker Image for Person Detection Service

on:
  push:
    branches:
      - main

permissions:
  packages: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: echo "${GITHUB_TOKEN}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      run: docker build -t ghcr.io/deepview-analytics/person_detection_service_yolov8s:latest .

    - name: Push Docker image to GitHub Packages
      run: docker push ghcr.io/deepview-analytics/person_detection_service_yolov8s:latest

  deploy-to-kubernetes:
    
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      # Step 1: Set up SSH key for GitHub Actions
      - name: Set up SSH key for GitHub Actions
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  
      # Step 2: Debug SSH connection using Localtunnel URL
      - name: Debug SSH connection to WSL
        run: |
          # The Localtunnel URL you got from the previous command
          WSL_SSH_URL="salty-streets-admire.loca.lt"
          WSL_SSH_PORT="22"  # Default SSH port
          
          # Check if the SSH key is added and available in the agent
          ssh-add -l
          
          # Attempt to connect to the WSL instance using SSH
          echo "Attempting to connect to WSL via SSH at ${WSL_SSH_URL}:${WSL_SSH_PORT}"
          ssh -vvv -o StrictHostKeyChecking=no -o IdentitiesOnly=yes hamza@${WSL_SSH_URL} -p ${WSL_SSH_PORT} exit || echo "SSH connection failed"
  
      # Step 3: SSH into WSL and apply Kubernetes configuration
      - name: Establish SSH connection to WSL Docker Desktop and Apply Kubernetes Config
        run: |
          # The Localtunnel URL you got from the previous command
          WSL_SSH_URL="salty-streets-admire.loca.lt"
          WSL_SSH_PORT="22"  # Default SSH port
          
          echo "Connecting to WSL over SSH..."
          
          # SSH into your WSL instance and apply the Kubernetes configuration
          ssh -t -o StrictHostKeyChecking=no -o IdentitiesOnly=yes hamza@${WSL_SSH_URL} -p ${WSL_SSH_PORT} << EOF
            echo "Connected to WSL and applying Kubernetes config..."
  
            # Set the kubeconfig and apply Kubernetes manifests
            export KUBECONFIG=/path/to/kubeconfig.yaml
            kubectl config use-context docker-desktop --kubeconfig=$KUBECONFIG
            
            kubectl apply -f /path/to/kubernetes/deployment.yaml --kubeconfig=$KUBECONFIG
            kubectl apply -f /path/to/kubernetes/service.yaml --kubeconfig=$KUBECONFIG
            kubectl apply -f /path/to/kubernetes/hpa.yaml --kubeconfig=$KUBECONFIG
            kubectl apply -f /path/to/kubernetes/network-policy.yaml --kubeconfig=$KUBECONFIG
          EOF
  